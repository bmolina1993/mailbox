Total: 4.56s
ROUTINE ======================== github.com/bmolina1993/mailbox/src/services.ExtractDataPerFile in /home/bmolina/go/src/truora/back_end/src/services/extract.service.go
         0      240ms (flat, cum)  5.26% of Total
         .          .     89:}
         .          .     90:
         .          .     91:// extra data de cada archivo
         .          .     92:// por carpeta interna de usuarios
         .          .     93:func ExtractDataPerFile(path, folder, userFolder string) (a int, b map[string]string) {
         .       10ms     94:	files, _ := ReadDirFile(path)
         .          .     95:
         .          .     96:	/*
         .          .     97:		fmt.Println("\n *** ExtractDataPerFile ***")
         .          .     98:		fmt.Println("path:", path)             //[x]
         .          .     99:		fmt.Println("folder:", folder)         //[x]
         .          .    100:		fmt.Println("userFolder:", userFolder) //[x]
         .          .    101:	*/
         .          .    102:
         .          .    103:	//instanciamos struct mail
         .          .    104:	dataMail := entity.QueryMail{}
         .          .    105:	dataFolders := make(map[string]string)
         .          .    106:	var qtyFolders int
         .          .    107:	var qtyFiles int
         .          .    108:	//var folderNameNested string
         .          .    109:
         .          .    110:	//recorre cada archivo
         .          .    111:	for fileName, isDir := range files {
         .       10ms    112:		fullPathFile := path + "/" + fileName
         .          .    113:		//extrae data solo de archivos
         .          .    114:		if !isDir {
         .          .    115:			//acumula cantidad de archivos por carpeta
         .          .    116:			qtyFiles++
         .          .    117:			//extraccion de dato mail
         .       50ms    118:			auxData, _ := ReadFile(fullPathFile)
         .          .    119:			props, body := ExtractData(auxData)
         .          .    120:			//props, _ := ExtractData(auxData)
         .          .    121:
         .       10ms    122:			date := extractPropDate(props)
         .          .    123:			from := extractPropFrom(props)
         .       60ms    124:			to := extractPropTo(props)
         .       80ms    125:			subject := extractPropSubject(props)
         .          .    126:
         .          .    127:			dataMail.Index = userFolder
         .          .    128:			dataMail.Records = append(dataMail.Records, entity.Properties{
         .          .    129:				Folder:  folder,
         .          .    130:				Date:    date,
         .          .    131:				From:    from,
         .          .    132:				To:      to,
         .          .    133:				Subject: subject,
         .          .    134:				Body:    body,
         .          .    135:			})
         .          .    136:		} else {
         .          .    137:			//si es carpeta, se acumula cantidad encontrada
         .          .    138:			qtyFolders++
         .          .    139:			dataFolders[fullPathFile] = folder + "/" + fileName
         .          .    140:		}
         .          .    141:	}
         .          .    142:
         .          .    143:	/*
         .          .    144:		fmt.Println("qtyFiles:", qtyFiles)       //[x]
         .          .    145:		fmt.Println("qtyFolders:", qtyFolders)   //[x]
         .          .    146:		fmt.Println("dataFolders:", dataFolders) //[x]
         .          .    147:	*/
         .          .    148:
         .          .    149:	//post api para insercion de datos masivo
         .       20ms    150:	PostApiBulkData(dataMail)
         .          .    151:
         .          .    152:	return qtyFolders, dataFolders
         .          .    153:}
